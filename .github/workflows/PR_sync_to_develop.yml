---
name: PR-sync-to-develop

on:
  pull_request:
    types: [closed]
    branches: ['main', 'main-*']

jobs:
  sync-to-develop:
    name: Sync To Develop branch
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Calculate sync, develop and main branches
        id: calculate-branches
        run: |
          BASELINE_BRANCH=${{ github.base_ref }}
          DEVELOP_BRANCH=${BASELINE_BRANCH/main/develop}
          {
            echo "DEVELOP_BRANCH=$DEVELOP_BRANCH"
            echo "SYNC_BRANCH=automated/sync-from-$BASELINE_BRANCH-to-$DEVELOP_BRANCH"
            echo "MAIN_BRANCH=$BASELINE_BRANCH"
          } >> "$GITHUB_OUTPUT"
      - name: Print calculated branches
        run: |
          echo "DEVELOP_BRANCH=${{ steps.calculate-branches.outputs.DEVELOP_BRANCH }}"
          echo "SYNC_BRANCH=${{ steps.calculate-branches.outputs.SYNC_BRANCH }}"
          echo "MAIN_BRANCH=${{ steps.calculate-branches.outputs.MAIN_BRANCH }}"
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.base_ref }}
      - name: Get existant branches and pull requests from repository
        id: get-repo-info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sync_branch="${{ steps.calculate-branches.outputs.SYNC_BRANCH }}"
          if [[ -n $(git ls-remote --heads origin $sync_branch) ]]; then
            pull_request=$(gh api "/repos/${{ github.repository }}/pulls" | jq -r ".[] | select(.head.ref==\"$sync_branch\") | .number")
            echo "PULL_REQUEST=$pull_request" >> "$GITHUB_OUTPUT"
            echo "PULL_REQUEST=$pull_request"
          fi
      - name: Commit changes
        id: commit
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_PUSH }}
        run: |
          develop="${{ steps.calculate-branches.outputs.DEVELOP_BRANCH }}"
          if [[ -z $(git ls-remote --heads origin $develop) ]]; then
            # Avoid creating sync PR if the corresponding development branch does not exist
            echo "The $develop branch does not exist in remote. Skipping the creation of the sync PR"
          else
            sync_branch="${{ steps.calculate-branches.outputs.SYNC_BRANCH }}"
            main_branch="${{ steps.calculate-branches.outputs.MAIN_BRANCH }}"

            if [[ -n $(git ls-remote --heads origin $sync_branch) ]]; then
              git checkout "$sync_branch"
              git rebase $main_branch
              git push --no-verify -u origin HEAD
              echo "EXIST_BRANCH=True" >> "$GITHUB_OUTPUT"
            else
              git checkout -b "$sync_branch"
              git push --no-verify -u origin HEAD
              echo "EXIST_BRANCH=False" >> "$GITHUB_OUTPUT"
            fi
          fi
      - name: Create PR body
        id: pr-body
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_body="**Automated Pull Request** related to:"
          pr_body="$pr_body"$'\n'"- #${{ github.event.pull_request.number }}"

          delimiter="$(openssl rand -hex 8)"
          echo "PR_BODY<<${delimiter}" >> "$GITHUB_OUTPUT"
          echo "$pr_body" >> "$GITHUB_OUTPUT"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"
      - name: Create Automated PR
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_PUSH }}
          GH_TOKEN: ${{ github.token }}
        run: |
          develop="${{ steps.calculate-branches.outputs.DEVELOP_BRANCH }}"
          pull_request="${{ steps.get-repo-info.outputs.number }}"
          main_branch="${{ steps.calculate-branches.outputs.MAIN_BRANCH }}"
          pr_body="${{ steps.pr-body.outputs.PR_BODY }}"

          if [[ $pull_request != "" ]]; then
              gh pr edit $pull_request -b "$pr_body"
          else
            gh pr create --base "$develop" \
              --title "Sync from $main_branch to $develop" \
              --body "$pr_body"
          fi
      - name: Add PR comment - On Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.number }} --body "
          ### :exclamation: :exclamation: :exclamation: Sync to develop failure
          - See the [workflow log](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          "
